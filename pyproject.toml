[project]
name = ""
version = ""
description = ""
authors = [
    {name = "Eric Smith", email = "eric@esmithy.net"},
]
dependencies = [
    "starlette>=0.23.1",
    "httpx>=0.23.3",
    "jinja2>=3.1.2",
    "uvicorn>=0.20.0",
    "sqlitedict>=2.1.0",
    "cryptography<3.5",
    "python-multipart>=0.0.5",
    "aiogoogle>=5.1.0",
    "Authlib>=1.2.0",
    "argon2-cffi>=21.3.0",
    "itsdangerous>=2.1.2",
]
requires-python = ">=3.10"
license = {text = "MIT"}

[tool.pdm]
[tool.pdm.dev-dependencies]
dev = [
    "black>=22.12.0",
    "mypy>=0.991",
    "pytest>=7.2.1",
    "pre-commit>=2.21.0",
    "pytest-asyncio>=0.20.3",
    "mimesis>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.0.254",
]

[tool.pdm.scripts]

[tool.pdm.scripts.dev]
cmd = "uvicorn --reload --app-dir src --log-config conf/uvicorn.logger.json mboard.main:app"
help = "Run the web server with auto-reload"

[tool.pdm.scripts.pre]
cmd = "pre-commit run --all-files"
help = "Run pre-commit checks on all files"

[tool.pdm.scripts.styles]
cmd = "sass --style=compressed --no-source-map --update assets/styles.scss static/styles.css"
help = "Build the styles.css file"

[tool.pdm.scripts.test]
cmd = "pytest"
help = "Run the tests"

[tool.pdm.scripts.test-cov]
composite = ["test --cov=src/mboard --cov-report=html", "_test-cov-srv"]
help = "Run the tests with coverage and serve the report"

[tool.pdm.scripts.test-cov-srv]
cmd = "python -m http.server --bind 127.0.0.1 --directory htmlcov 8888"
help = "Serve the coverage report"

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pylint.general]
init-hook="import sys; sys.path.append('src')"

[tool.pylint.messages_control]
disable = """
missing-function-docstring,
too-few-public-methods,
"""

[tool.pylint.basic]
good-names = "db, ex"

[tool.pytest.ini_options]
# Allow tests to import application files by updating pythonpath. See:
# https://docs.pytest.org/en/latest/explanation/goodpractices.html#choosing-a-test-layout-import-rules
pythonpath = "src"

# Default fixture scope for aysncio tests.
asyncio_default_fixture_loop_scope = "function"

# Show slowest tests.
addopts = "--durations=5"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN101",   # Missing type annotation for `self` in method
    "ANN002",   # Missing type annotation for `*args`
    "ANN003",   # Missing type annotation for `**kwargs`
    "D103",     # Missing docstring in public function
    "D104",     # Missing docstring in public package
    "D203",     # 1 blank line required before class docstring
    "D213",     # Multi-line docstring summary should start at the second line
    "PGH003",   # Use specific rule codes when ignoring type issues
    "RET504",   # Unnecessary variable assignment before `return` statement
    "S105",     # Possible hardcoded password
    "S106",     # Possible hardcoded password
    "TRY300",   # Consider moving this statement to an `else` block
]
